// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model User {
  id        String   @id @default(cuid())
  username  String   @unique
  password  String
  isActive  Boolean  @default(true) @map("is_active")
  createdAt DateTime @default(now()) @map("created_at")
  updatedAt DateTime @updatedAt @map("updated_at")

  // Relations
  smsLogs SmsLog[]
  
  @@map("users")
}

model SmsLog {
  id          String      @id @default(cuid())
  phoneNumber String      @map("phone_number")
  message     String      @db.Text
  status      SmsStatus   @default(PENDING)
  sentAt      DateTime?   @map("sent_at")
  errorMsg    String?     @map("error_msg") @db.Text
  retryCount  Int         @default(0) @map("retry_count")
  userId      String?     @map("user_id")
  createdAt   DateTime    @default(now()) @map("created_at")
  updatedAt   DateTime    @updatedAt @map("updated_at")

  // Relations
  user User? @relation(fields: [userId], references: [id])
  
  @@map("sms_logs")
}

model IncomingSms {
  id          String   @id @default(cuid())
  phoneNumber String   @map("phone_number")
  message     String   @db.Text
  receivedAt  DateTime @default(now()) @map("received_at")
  processed   Boolean  @default(false)
  createdAt   DateTime @default(now()) @map("created_at")
  
  @@map("incoming_sms")
}

model LoginAttempt {
  id        String   @id @default(cuid())
  username  String
  success   Boolean  @default(false)
  ipAddress String?  @map("ip_address")
  userAgent String?  @map("user_agent")
  createdAt DateTime @default(now()) @map("created_at")
  
  @@map("login_attempts")
}

enum SmsStatus {
  PENDING
  SENT
  FAILED
  RETRY
}
